# Basic settings
set ignorecase true
set icons
set drawbox true
set relativenumber

# Previewer
set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id

# Custom functions
cmd mkdir %{{
	printf "Directory name: "
	read ans
	mkdir $ans
}}

cmd mkfile %{{
	printf "File name: "
	read ans
	touch $ans
}}

cmd chmod %{{
	printf "Mode bits: "
	read ans

	for file in "$fx"
	do
		chmod $ans $file
	done
}}

cmd fzf_jump ${{
	res="$(fd --max-depth 4 --no-ignore -H | fzf --reverse --header='Jump to location')"
	if [ -f "$res" ]; then
		cmd="select"
	elif [ -d "$res" ]; then
		cmd="cd"
	else
		exit 0
	fi
	lf -remote "send $id $cmd \"$res\""
}}

# Archiving bindings
cmd unarchive ${{
	case "$f" in
		*.zip) unzip "$f" ;;
		*.tar.gz) tar -xzvf "$f" ;;
		*.tar.bz2) tar -xjvf "$f" ;;
		*.tar) tar -xvf "$f" ;;
		*.rar) unrar x "$f" ;;
		*) echo "Unsupported format. If you think it should be, try adding it to lfrc" ;;
	esac
}}

cmd tar %{{
	set -f
	printf "Archive name: "
	read ans
	mkdir $ans
	for i in $fx
	do
		cp -r $i $ans
	done
	tar czf $ans.tar.gz $ans
	rm -rf $ans
}}

cmd zip %{{
	set -f
	mkdir $1
	cp -r $fs $1
	zip -r $1.zip $1
	rm -rf $1
}}

cmd chezmoi_add %{{
	set -f
	for i in $fx
	do
		chezmoi add $i
		# unselect
	done
}}

# cmd open &{{
# 	alacritty --hold -e nvim $f && kill -9 $(ps -o ppid= -p $$)
# }}

# cmd open &{{
# 	case $(file --mime-type -Lb $f) in
# 		text/*)
# 			alacritty --hold -e nvim $f && pkill -9 $(ps -o ppid= -p $$);;
# 		*)
# 			for f in $fx;
# 				do xdg-open $f > /dev/null 2> /dev/null &
# 				done;;
# 	esac
# }}

cmd open &{{
	case $(file --mime-type -Lb $f) in
		text/*)
			alacritty -e sh -c "nvim \"$fx\"";;
			# parent_pid=$$;
			# alacritty -e nvim $f & wait $!;
			# kill -9 $parent_pid;;
		*)
			for f in $fx;
				do xdg-open $f > /dev/null 2> /dev/null &
				done;;
	esac
}}


# Clear some bindings
map m
map f

# Keybinds
map au unarchive # Will unarchive following filetypes: .zip, .tar.gz, .tar.bz2, .tar, .rar
map at tar # Will create a .tar.gz archive
map az zip # Will create a .zip archive
map . set hidden! # Toggles viewing hidden files
map x cut # Cuts the file or directory
map DD delete # Deletes the file or directory
map p paste # Pastes any cut or copied files to the current directory
map y copy # Copies the file or directory
map <enter> open # Open selected directory or file (xdg-open is used to determine which program to use)
map R reload # Refreshes the current directory and updates any changes
map mf mkfile # Create a file
map md mkdir # Create a directory
map C clear # Clears any files or directories that have been marked for copy/cut/delete
map f fzf_jump # Fuzzy-find files and jump to them
map ac chezmoi_add # Add selected files to chezmoi source state directory

# Movement to common directories
map gd cd ~/Documents/ # Change directory to ~/Documents/
map ge cd ~/Documents/EUC # Change directory to ~/Documents/EUC
map gD cd ~/Downloads/ # Change directory to ~/Downloads/
map gP cd ~/Pictures/ # Change directory to ~/Pictures/
map gp cd ~/Projects/ # Change directory to ~/Projects/
map gc cd ~/.config/ # Change directory to ~/.config/
map gb cd ~/.bin/ # Change directory to ~/.bin/
map gG cd ~/Games/ # Change directory to ~/Games/
map gr cd / # Change directory to / (root dir)
